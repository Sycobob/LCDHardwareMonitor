Python Packages: C:\Users\akbyrd\AppData\Local\Programs\Python\Python38-32\Lib\site-packages

import board                                                                                        board.py
    from adafruit_blinka.agnostic import board_id, detector
    import adafruit_platformdetect.constants.boards as ap_board
    elif board_id == ap_board.FTDI_FT232H:
        from adafruit_blinka.board.ftdi_ft232h import *                                             adafruit_blinka\board\
    import class Pin                                                                                adafruit_blinka\microcontroller\ft232h\pin.py
    ft232 pins                                                                                      adafruit_blinka\board\ftdi_ft232h.py

    def SPI():
        import busio
        return busio.SPI(SCLK, MOSI, MISO)

import digitalio                                                                                    digitalio.py (circuitpython)
    from adafruit_blinka.agnostic import board_id
    from adafruit_blinka.microcontroller.ft232h.pin import Pin
    D4 = pin.D4
    D5 = pin.D5
    D6 = pin.D6
    D7 = pin.D7
    C0 = pin.C0
    C1 = pin.C1
    C2 = pin.C2
    C3 = pin.C3
    C4 = pin.C4
    C5 = pin.C5
    C6 = pin.C6
    C7 = pin.C7
    SDA = pin.SDA
    SCL = pin.SCL
    SCK = pin.SCK
    SCLK = pin.SCLK
    MOSI = pin.MOSI
    MISO = pin.MISO

cs_pin = digitalio.DigitalInOut(board.C0)
dc_pin = digitalio.DigitalInOut(board.C1)

import adafruit_rgb_display.ili9341 as ili9341                                                      adafruit_rgb_display\ili9341.py
    _COLUMN_SET = 0x2A
    _PAGE_SET = 0x2B
    _RAM_WRITE = 0x2C
    _RAM_READ = 0x2E
    _INIT = (
        (0xEF, b"\x03\x80\x02"),
        (0xCF, b"\x00\xc1\x30"),
        (0xED, b"\x64\x03\x12\x81"),
        (0xE8, b"\x85\x00\x78"),
        (0xCB, b"\x39\x2c\x00\x34\x02"),
        (0xF7, b"\x20"),
        (0xEA, b"\x00\x00"),
        (0xC0, b"\x23"),  # Power Control 1, VRH[5:0]
        (0xC1, b"\x10"),  # Power Control 2, SAP[2:0], BT[3:0]
        (0xC5, b"\x3e\x28"),  # VCM Control 1
        (0xC7, b"\x86"),  # VCM Control 2
        (0x36, b"\x48"),  # Memory Access Control
        (0x3A, b"\x55"),  # Pixel Format
        (0xB1, b"\x00\x18"),  # FRMCTR1
        (0xB6, b"\x08\x82\x27"),  # Display Function Control
        (0xF2, b"\x00"),  # 3Gamma Function Disable
        (0x26, b"\x01"),  # Gamma Curve Selected
        (
            0xE0,  # Set Gamma
            b"\x0f\x31\x2b\x0c\x0e\x08\x4e\xf1\x37\x07\x10\x03\x0e\x09\x00",
        ),
        (
            0xE1,  # Set Gamma
            b"\x00\x0e\x14\x03\x11\x07\x31\xc1\x48\x08\x0f\x0c\x31\x36\x0f",
        ),
        (0x11, None),
        (0x29, None),
    )
    _ENCODE_PIXEL = ">H"
    _ENCODE_POS = ">HH"
    _DECODE_PIXEL = ">BBB"
display = ili9341.ILI9341(board.SPI(), cs=cs_pin, dc=dc_pin, baudrate=64000000)

from adafruit_rgb_display import color565
display.fill(color565(0xff, 0x11, 0x22))
