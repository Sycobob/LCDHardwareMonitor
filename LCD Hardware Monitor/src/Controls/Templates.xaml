<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

	<Style x:Key="{x:Type TreeViewItem}"
		TargetType="{x:Type TreeViewItem}"
		BasedOn="{StaticResource {x:Type TreeViewItem}}">

		<!-- Same as the MUI template, but allows the content to stretch horizontally-->
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TreeViewItem}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition MinWidth="19" Width="Auto"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition/>
						</Grid.RowDefinitions>

						<ToggleButton x:Name="Expander"
							Style="{StaticResource ExpandCollapseToggleStyle}"
							IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
							ClickMode="Press"/>
						<Border Name="Bd"
							Grid.Column="1"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Padding="{TemplateBinding Padding}"
							SnapsToDevicePixels="true">

							<ContentPresenter x:Name="PART_Header"
								ContentSource="Header"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</Border>
						<ItemsPresenter x:Name="ItemsHost"
							Grid.Row="1"
							Grid.Column="1"
							Grid.ColumnSpan="2"/>

					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsExpanded" Value="false">
							<Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
						</Trigger>
						<Trigger Property="HasItems" Value="false">
							<Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
						</Trigger>
						<Trigger SourceName="Bd" Property="IsMouseOver" Value="True">
							<Setter TargetName="Bd" Property="Background" Value="{DynamicResource ItemBackgroundHover}"/>
							<Setter Property="Foreground" Value="{DynamicResource ItemTextHover}"/>
						</Trigger>
						<Trigger Property="IsSelected" Value="true">
							<Setter TargetName="Bd" Property="Background" Value="{DynamicResource ItemBackgroundSelected}"/>
							<Setter Property="Foreground" Value="{DynamicResource ItemTextSelected}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource ItemTextDisabled}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>