Refactoring
	Replace references with pointers
	Stop using wide characters. That's not the right path to unicode support.
	Decide what we're really doing with wide characters/i18n
	Drop some of the variable name prefixes, such as d3d
	Use self or this as parameter name for 'methods'
	Should const be used on parameters and locals?
	Include 'out' in out parameter names
	Array and String slices?
	Pick strict C++ version

Bugs
	Zooming in and then out leaves the window the wrong size

Plugins
	- Enforce the constraint the you may *ONLY* access application provided
	  services during scope of the function to which the services were passed.
	  Basically, don't save a reference and access services from a separate
	  thread. This could be detected with a 'shim' of some sort (accessor
	  function?)
	- Write a tutorial for creating plugins. Warn about loader lock. Warn about
	  using version/strong name for dependencies so you don't end up with the
	  wrong one because the name matched.
	- Create a template C++/CLI project and a tutorial for writing .NET plugins.
	- Ensure debugging for both native and managed plugins is reasonable.
	- Catch managed exceptions from the native side. Can't have them crash the
	  application.

Architecture
	- Decide on static or dynamic linking to e.g. the CRT. Bundle redistributables
	  if dynamically linking.
	- Load default/fallback resources

Next
	Read about single translation unit builds
	Maybe change .h to .hpp?
	Decide on comment style
	Ensure Platform function naming is uniform
	Implement OHM plugin
