#include "../src/Outline.ps.h"

Texture2D srcTex;
SamplerState samplerState;

struct PixelFragment
{
	float4 PosH  : SV_POSITION;
	float4 Color : COLOR;
	float2 UV    : TEXCOORD;
};

float4 main(PixelFragment pIn) : SV_TARGET
{
	// TODO: Move to constant buffer (screws with loop unrolling)
	int blurRadius = 16;
	float slope = -1.0 / blurRadius;
	float2 texelStep = 1.0 / textureSize * blurDirection;

	float maxAlpha = 0;
	for (int i = 1; i <= blurRadius; i++)
	{
		float src1 = srcTex.Sample(samplerState, pIn.UV + (i * texelStep)).a;
		float src2 = srcTex.Sample(samplerState, pIn.UV - (i * texelStep)).a;
		float src = max(src1, src2);

		float dist = i;
		float alpha = sqrt((slope * (dist - 1)) + 1) * src;
		maxAlpha = max(maxAlpha, alpha);
	}

	// If this pixel is in the shape we're outlining don't modify it
	float4 origColor = srcTex.Sample(samplerState, pIn.UV);
	if (origColor.a == 1)
		return origColor;

	return float4(maxAlpha, maxAlpha, maxAlpha, maxAlpha);
}
